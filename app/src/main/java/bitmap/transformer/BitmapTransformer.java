/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bitmap.transformer;

import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class BitmapTransformer {
    public static void main(String[] args) {
        //if arg[1] is not a string throw error
        if (args.length > 3) {
            System.out.println("please provide three valid arguments: 'input output transform'");
        }

        //input-file-path, output-file-path, transfrom-name
        String imgPath = args[0];
        String savePath = args[1];
        String transformation = args[2];

        //open the file
        Bitmap bmp = new Bitmap();
        try {
            bmp.loadFromFile(imgPath);
        } catch (IOException e) {
            System.out.println("File not found!");
            return;
        }

        //get the transformation method if valid
        Method method;
        try {
            if (!Bitmap.validTransformations.contains(transformation)) {
                System.out.printf("%s is not a valid transformation use:%s", transformation, Bitmap.validTransformations);
                return;
            }
            method = Bitmap.class.getDeclaredMethod(transformation);
        } catch (NoSuchMethodException e) {
            System.out.printf("%s is not a valid transformation use:%s", transformation, Bitmap.validTransformations);
            return;
        }

        //get run the transformation method
        try {
            method.invoke(bmp);
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (InvocationTargetException e) {
            e.printStackTrace();
        }

        //save the file
        try {
            bmp.saveToFile(savePath);
        } catch (IOException e) {
            System.out.printf("%s is not a valid save path", savePath);
            return;
        }

        //return success
        System.out.println("Complete! :)");
    }
}

